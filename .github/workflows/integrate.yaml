name: Integration

on:
  # Trigger the workflow on pull requests targeting the `main` branch.
  pull_request:
    branches: [main]

# Sets permissions for the GITHUB_TOKEN. This grants read access to the repository contents.
permissions:
  contents: write

jobs:
  setup:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        # This defines the operating system to run the tests on.
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
        # This defines the Node.js versions to run the tests on.
        # The tests will run in parallel for each of these Node versions.
        node-version: [18.x, 20.x, 22.x]
      # Fail fast is disabled because we want to run all tests even if some fail.
      fail-fast: false

    name: NODE ${{ matrix.node-version }} @ ${{ matrix.operating-system }}
    steps:
      # Step to check out the repository code.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to cache the `node_modules` directory to improve performance of subsequent runs.
      - name: Cache Node modules
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Step to set up Node.js with the version from the matrix.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step to install dependencies using Yarn.
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      # Step to run ESLint checks on the codebase.
      - name: Run Eslint checks
        run: yarn lint:check

      # Step to run spell checking on the codebase.
      - name: Run Spell checks
        run: yarn cspell

      # Step to run tests on the codebase.
      - name: Run Test
        run: yarn test

      # Step to build the project for production.
      - name: Run Build
        run: yarn build
