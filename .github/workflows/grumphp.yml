name: GrumPHP

on:
  # Trigger the workflow on pull requests targeting the `main` branch.
  pull_request:
    branches: [main]

# Sets permissions for the GITHUB_TOKEN. This grants read access to the repository contents.
permissions:
  contents: read

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest, windows-latest]
        php-versions: ['8.1', '8.2', '8.3', '8.4']
        composer-deps: [highest, lowest, lock]
        composer-versions: ['composer:v2']
        # Fail fast is disabled because we want to run all tests even if some fail.
      fail-fast: false

    name: PHP ${{ matrix.php-versions }} @ ${{ matrix.operating-system }} with ${{ matrix.composer-versions }} ${{ matrix.composer-deps }}
    steps:
      # Step to check out the repository code.
      - name: Checkout
        uses: actions/checkout@v4

        # Step to install PHP
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: ${{ matrix.composer-versions }}
          extensions: xdebug, mbstring, posix

          # Step to check the PHP versions
      - name: Check Versions
        run: |
          php -v
          php -m
          composer --version

          # Step to set env vars for latest PHP version
      - name: Set env vars for latest PHP version
        if: matrix.php-versions == '8.4'
        run: |
          export COMPOSER_IGNORE_PLATFORM_REQ=php+
          export BOX_REQUIREMENT_CHECKER=0

          # Step to get composer cache directory
      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

        # Step to cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.composer-versions }}-${{ matrix.composer-deps }}-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

          # Step to install dependencies (highest)
      - name: Install dependencies (highest)
        if: matrix.composer-deps == 'highest'
        run: composer update --prefer-dist --no-progress --no-suggest

        # Step to install dependencies (lowest)
      - name: Install dependencies (lowest)
        if: matrix.composer-deps == 'lowest'
        run: composer update --prefer-dist --no-progress --no-suggest --prefer-lowest

        # Step to install dependencies (lock)
      - name: Install dependencies (lock)
        if: matrix.composer-deps == 'lock'
        run: |
          composer install --no-progress --no-suggest
          composer validate

          # Step to run phpcs
      - name: Run phpcs
        run: yarn phpcs:check
